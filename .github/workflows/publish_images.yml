name: PublishImages

on:
  workflow_dispatch:
    branches: 
      - main
  push:
    tags:
      - 'v*.*.*'
jobs:
  pushToDockerhub:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: alitari
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Build and push mapper
        id: docker_build_mapper
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            docker.io/alitari/ce-go-template-mapper:latest
            docker.io/alitari/ce-go-template-mapper:${{ env.RELEASE_VERSION }}
          context: .
          file: ./build/Dockerfile_mapper
          platforms: linux/amd64
      -
        name: Image digest mapper
        run: echo ${{ steps.docker_build_mapper.outputs.digest }}

      -
        name: Build and push producer
        id: docker_build_producer
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            docker.io/alitari/ce-go-template-producer:latest
            docker.io/alitari/ce-go-template-producer:${{ env.RELEASE_VERSION }}
          context: .
          file: ./build/Dockerfile_producer
          platforms: linux/amd64
      -
        name: Image digest producer
        run: echo ${{ steps.docker_build_producer.outputs.digest }}
      -
        name: Build and push filter
        id: docker_build_filter
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            docker.io/alitari/ce-go-template-filter:latest
            docker.io/alitari/ce-go-template-filter:${{ env.RELEASE_VERSION }}
          context: .
          file: ./build/Dockerfile_filter
          platforms: linux/amd64
      -
        name: Image digest filter
        run: echo ${{ steps.docker_build_filter.outputs.digest }}
